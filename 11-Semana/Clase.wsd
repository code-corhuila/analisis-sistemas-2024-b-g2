@startuml

class Persona{
    - nombre : String
    - apellido : String
    - telefono : String
    - correo : String
    - direccion : String
    
}
class Rol{
    - codigo : String
    - nombre : String
    - descripcion : String
}
    

class Usuario{
    - usuario : String
    - contrasenia : String
    - personaId : Persona
    - rolId : Rol
}

class Categoria{
    - codigo : String
    - nombre : String
    - descripcion : String
}

class Producto{
    - codigo : String
    - nombre : String
    - descripcion : String
    - Categoria : Categoria
}

class Inventario{
    - stock : Integer
    - valorCompra : Decimal
    - valorVenta : Decimal
    - productoId : Producto
}
class Factura{
    - fecha : LocalDateTime
    - valorPagar : Decimal
    - usuarioId : Usuario
}
    
class DetalleFactura{
    - valorPagar : Decimal
    - cantidad : Integer
    - facturaId : Factura
    - productoId : Producto    
}

interface CRUD{
    + Create : EntityClass(Entity entity)
    + Update : void(Entity entity, Integer id)
    + All : List<Entity> (Boolean data)
    + FindById : Optional<Entity> (Integer id) 
    + Delete : void (Integer id)
}

abstract class ABaseEntity implements CRUD{
    - status : Boolean
    - createdAt : LocalDateTime
    - updatedAt : LocalDateTime
    - deletedAt : LocalDateTime
    - createdBy : Integer
    - updatedBy : Integer
    - deletedBy : Integer
}

class PersonaI extends ABaseEntity{

}
class UsuarioI extends ABaseEntity{

}
class CategoriaI extends ABaseEntity{

}
class ProductoI extends ABaseEntity{

}
class InvnetarioI extends ABaseEntity{

}
class FacturaI extends ABaseEntity{

}
class DetalleFacturaI extends ABaseEntity{

}

Usuario o-- Persona
Usuario *-- Rol
Producto o-- Categoria
Inventario *-- Producto
Factura o-- Usuario
DetalleFactura *-- Factura
DetalleFactura *-- Producto



@enduml